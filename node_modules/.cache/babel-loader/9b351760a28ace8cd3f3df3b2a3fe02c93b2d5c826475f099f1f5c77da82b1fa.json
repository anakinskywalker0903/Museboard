{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\n\n// Mock AI responses that simulate Chrome AI API behavior\nconst mockAIResponses = {\n  expand: prompt => {\n    // Generate ideas based on the prompt\n    const lowerPrompt = prompt.toLowerCase();\n    if (lowerPrompt.includes('hackathon') || lowerPrompt.includes('ai hackathon')) {\n      return ['Problem Identification', 'Solution Architecture', 'Tech Stack Selection', 'Team Formation', 'MVP Development', 'Demo Preparation', 'Pitch Strategy'];\n    }\n    if (lowerPrompt.includes('startup') || lowerPrompt.includes('business')) {\n      return ['Market Research', 'Business Model', 'Funding Strategy', 'Product Development', 'Marketing Plan', 'Team Building', 'Operations'];\n    }\n    if (lowerPrompt.includes('app') || lowerPrompt.includes('mobile')) {\n      return ['User Experience Design', 'Technical Architecture', 'Development Timeline', 'Testing Strategy', 'App Store Optimization', 'Monetization Model', 'Marketing Launch'];\n    }\n    if (lowerPrompt.includes('website') || lowerPrompt.includes('web')) {\n      return ['Design & Wireframes', 'Frontend Development', 'Backend Infrastructure', 'Database Design', 'SEO Optimization', 'Performance Optimization', 'Deployment Strategy'];\n    }\n    if (lowerPrompt.includes('marketing') || lowerPrompt.includes('brand')) {\n      return ['Target Audience', 'Brand Identity', 'Content Strategy', 'Social Media Plan', 'Advertising Campaigns', 'Analytics & Metrics', 'Budget Allocation'];\n    }\n\n    // Generic expansion for any topic\n    return ['Core Concept', 'Implementation Strategy', 'Target Audience', 'Success Metrics', 'Risk Management', 'Resource Requirements', 'Timeline Planning'];\n  },\n  refine: text => {\n    const refinements = {\n      'good shoes': 'Premium sustainable footwear with innovative design',\n      'marketing': 'Multi-channel digital marketing strategy targeting eco-conscious consumers',\n      'materials': 'Certified organic and recycled materials with minimal environmental impact',\n      'packaging': 'Biodegradable packaging made from recycled materials',\n      'shipping': 'Carbon-neutral shipping with offset programs'\n    };\n    return refinements[text.toLowerCase()] || `${text} - enhanced and refined for better impact`;\n  },\n  summarize: ideas => {\n    if (ideas.length === 0) return 'No ideas to summarize';\n    const categories = ideas.reduce((acc, idea) => {\n      const category = idea.text.split(' ')[0]; // Simple categorization\n      if (!acc[category]) acc[category] = [];\n      acc[category].push(idea.text);\n      return acc;\n    }, {});\n    const summary = Object.entries(categories).map(([category, items]) => `${category}: ${items.join(', ')}`).join('\\n');\n    return `Action Summary:\\n${summary}\\n\\nNext Steps: Prioritize implementation based on impact and feasibility.`;\n  },\n  translate: (text, language) => {\n    var _translations$languag;\n    const translations = {\n      spanish: {\n        'eco-friendly shoes': 'zapatos ecológicos',\n        'sustainable materials': 'materiales sostenibles',\n        'carbon neutral': 'carbono neutral',\n        'biodegradable packaging': 'embalaje biodegradable'\n      },\n      french: {\n        'eco-friendly shoes': 'chaussures écologiques',\n        'sustainable materials': 'matériaux durables',\n        'carbon neutral': 'neutre en carbone',\n        'biodegradable packaging': 'emballage biodégradable'\n      },\n      hindi: {\n        'eco-friendly shoes': 'पर्यावरण अनुकूल जूते',\n        'sustainable materials': 'टिकाऊ सामग्री',\n        'carbon neutral': 'कार्बन तटस्थ',\n        'biodegradable packaging': 'बायोडिग्रेडेबल पैकेजिंग'\n      }\n    };\n    return ((_translations$languag = translations[language]) === null || _translations$languag === void 0 ? void 0 : _translations$languag[text.toLowerCase()]) || `${text} (${language})`;\n  }\n};\n\n// Simulate Chrome AI API calls with realistic delays\nconst simulateAI = async (operation, ...args) => {\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n  // Simulate occasional failures\n  if (Math.random() < 0.1) {\n    throw new Error('AI service temporarily unavailable');\n  }\n  return mockAIResponses[operation](...args);\n};\nconst useAI = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastResponse, setLastResponse] = useState(null);\n  const expandIdeas = useCallback(async prompt => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const expandedIdeas = await simulateAI('expand', prompt);\n      setLastResponse({\n        type: 'expand',\n        data: expandedIdeas\n      });\n      return expandedIdeas;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const refineIdea = useCallback(async text => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const refinedText = await simulateAI('refine', text);\n      setLastResponse({\n        type: 'refine',\n        data: refinedText\n      });\n      return refinedText;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const summarizeIdeas = useCallback(async ideas => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const summary = await simulateAI('summarize', ideas);\n      setLastResponse({\n        type: 'summarize',\n        data: summary\n      });\n      return summary;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const translateIdea = useCallback(async (text, language = 'spanish') => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const translation = await simulateAI('translate', text, language);\n      setLastResponse({\n        type: 'translate',\n        data: translation\n      });\n      return translation;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Check if Chrome AI APIs are available (for future use)\n  const checkChromeAI = useCallback(() => {\n    var _window$chrome, _window$ai, _window$ai2, _window$ai3, _window$ai4, _window$ai5;\n    return {\n      available: typeof window !== 'undefined' && (window.ai || ((_window$chrome = window.chrome) === null || _window$chrome === void 0 ? void 0 : _window$chrome.ai) || navigator.ai),\n      apis: {\n        prompt: (_window$ai = window.ai) === null || _window$ai === void 0 ? void 0 : _window$ai.prompt,\n        writer: (_window$ai2 = window.ai) === null || _window$ai2 === void 0 ? void 0 : _window$ai2.writer,\n        rewriter: (_window$ai3 = window.ai) === null || _window$ai3 === void 0 ? void 0 : _window$ai3.rewriter,\n        summarizer: (_window$ai4 = window.ai) === null || _window$ai4 === void 0 ? void 0 : _window$ai4.summarizer,\n        translator: (_window$ai5 = window.ai) === null || _window$ai5 === void 0 ? void 0 : _window$ai5.translator\n      }\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    lastResponse,\n    expandIdeas,\n    refineIdea,\n    summarizeIdeas,\n    translateIdea,\n    checkChromeAI\n  };\n};\n_s(useAI, \"TKWQX/FKafFCtUJFMOtaw5sa56w=\");\nexport default useAI;","map":{"version":3,"names":["useState","useCallback","mockAIResponses","expand","prompt","lowerPrompt","toLowerCase","includes","refine","text","refinements","summarize","ideas","length","categories","reduce","acc","idea","category","split","push","summary","Object","entries","map","items","join","translate","language","_translations$languag","translations","spanish","french","hindi","simulateAI","operation","args","Promise","resolve","setTimeout","Math","random","Error","useAI","_s","isLoading","setIsLoading","error","setError","lastResponse","setLastResponse","expandIdeas","expandedIdeas","type","data","err","message","refineIdea","refinedText","summarizeIdeas","translateIdea","translation","checkChromeAI","_window$chrome","_window$ai","_window$ai2","_window$ai3","_window$ai4","_window$ai5","available","window","ai","chrome","navigator","apis","writer","rewriter","summarizer","translator"],"sources":["C:/Extensions/Museboard/src/hooks/useAI.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\n// Mock AI responses that simulate Chrome AI API behavior\r\nconst mockAIResponses = {\r\n  expand: (prompt) => {\r\n    // Generate ideas based on the prompt\r\n    const lowerPrompt = prompt.toLowerCase();\r\n    \r\n    if (lowerPrompt.includes('hackathon') || lowerPrompt.includes('ai hackathon')) {\r\n      return [\r\n        'Problem Identification',\r\n        'Solution Architecture', \r\n        'Tech Stack Selection',\r\n        'Team Formation',\r\n        'MVP Development',\r\n        'Demo Preparation',\r\n        'Pitch Strategy'\r\n      ];\r\n    }\r\n    \r\n    if (lowerPrompt.includes('startup') || lowerPrompt.includes('business')) {\r\n      return [\r\n        'Market Research',\r\n        'Business Model',\r\n        'Funding Strategy',\r\n        'Product Development',\r\n        'Marketing Plan',\r\n        'Team Building',\r\n        'Operations'\r\n      ];\r\n    }\r\n    \r\n    if (lowerPrompt.includes('app') || lowerPrompt.includes('mobile')) {\r\n      return [\r\n        'User Experience Design',\r\n        'Technical Architecture',\r\n        'Development Timeline',\r\n        'Testing Strategy',\r\n        'App Store Optimization',\r\n        'Monetization Model',\r\n        'Marketing Launch'\r\n      ];\r\n    }\r\n    \r\n    if (lowerPrompt.includes('website') || lowerPrompt.includes('web')) {\r\n      return [\r\n        'Design & Wireframes',\r\n        'Frontend Development',\r\n        'Backend Infrastructure',\r\n        'Database Design',\r\n        'SEO Optimization',\r\n        'Performance Optimization',\r\n        'Deployment Strategy'\r\n      ];\r\n    }\r\n    \r\n    if (lowerPrompt.includes('marketing') || lowerPrompt.includes('brand')) {\r\n      return [\r\n        'Target Audience',\r\n        'Brand Identity',\r\n        'Content Strategy',\r\n        'Social Media Plan',\r\n        'Advertising Campaigns',\r\n        'Analytics & Metrics',\r\n        'Budget Allocation'\r\n      ];\r\n    }\r\n    \r\n    // Generic expansion for any topic\r\n    return [\r\n      'Core Concept',\r\n      'Implementation Strategy',\r\n      'Target Audience',\r\n      'Success Metrics',\r\n      'Risk Management',\r\n      'Resource Requirements',\r\n      'Timeline Planning'\r\n    ];\r\n  },\r\n  \r\n  refine: (text) => {\r\n    const refinements = {\r\n      'good shoes': 'Premium sustainable footwear with innovative design',\r\n      'marketing': 'Multi-channel digital marketing strategy targeting eco-conscious consumers',\r\n      'materials': 'Certified organic and recycled materials with minimal environmental impact',\r\n      'packaging': 'Biodegradable packaging made from recycled materials',\r\n      'shipping': 'Carbon-neutral shipping with offset programs'\r\n    };\r\n    \r\n    return refinements[text.toLowerCase()] || `${text} - enhanced and refined for better impact`;\r\n  },\r\n  \r\n  summarize: (ideas) => {\r\n    if (ideas.length === 0) return 'No ideas to summarize';\r\n    \r\n    const categories = ideas.reduce((acc, idea) => {\r\n      const category = idea.text.split(' ')[0]; // Simple categorization\r\n      if (!acc[category]) acc[category] = [];\r\n      acc[category].push(idea.text);\r\n      return acc;\r\n    }, {});\r\n    \r\n    const summary = Object.entries(categories)\r\n      .map(([category, items]) => `${category}: ${items.join(', ')}`)\r\n      .join('\\n');\r\n    \r\n    return `Action Summary:\\n${summary}\\n\\nNext Steps: Prioritize implementation based on impact and feasibility.`;\r\n  },\r\n  \r\n  translate: (text, language) => {\r\n    const translations = {\r\n      spanish: {\r\n        'eco-friendly shoes': 'zapatos ecológicos',\r\n        'sustainable materials': 'materiales sostenibles',\r\n        'carbon neutral': 'carbono neutral',\r\n        'biodegradable packaging': 'embalaje biodegradable'\r\n      },\r\n      french: {\r\n        'eco-friendly shoes': 'chaussures écologiques',\r\n        'sustainable materials': 'matériaux durables',\r\n        'carbon neutral': 'neutre en carbone',\r\n        'biodegradable packaging': 'emballage biodégradable'\r\n      },\r\n      hindi: {\r\n        'eco-friendly shoes': 'पर्यावरण अनुकूल जूते',\r\n        'sustainable materials': 'टिकाऊ सामग्री',\r\n        'carbon neutral': 'कार्बन तटस्थ',\r\n        'biodegradable packaging': 'बायोडिग्रेडेबल पैकेजिंग'\r\n      }\r\n    };\r\n    \r\n    return translations[language]?.[text.toLowerCase()] || `${text} (${language})`;\r\n  }\r\n};\r\n\r\n// Simulate Chrome AI API calls with realistic delays\r\nconst simulateAI = async (operation, ...args) => {\r\n  // Simulate network delay\r\n  await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\r\n  \r\n  // Simulate occasional failures\r\n  if (Math.random() < 0.1) {\r\n    throw new Error('AI service temporarily unavailable');\r\n  }\r\n  \r\n  return mockAIResponses[operation](...args);\r\n};\r\n\r\nconst useAI = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [lastResponse, setLastResponse] = useState(null);\r\n\r\n  const expandIdeas = useCallback(async (prompt) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const expandedIdeas = await simulateAI('expand', prompt);\r\n      setLastResponse({ type: 'expand', data: expandedIdeas });\r\n      return expandedIdeas;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const refineIdea = useCallback(async (text) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const refinedText = await simulateAI('refine', text);\r\n      setLastResponse({ type: 'refine', data: refinedText });\r\n      return refinedText;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const summarizeIdeas = useCallback(async (ideas) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const summary = await simulateAI('summarize', ideas);\r\n      setLastResponse({ type: 'summarize', data: summary });\r\n      return summary;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const translateIdea = useCallback(async (text, language = 'spanish') => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const translation = await simulateAI('translate', text, language);\r\n      setLastResponse({ type: 'translate', data: translation });\r\n      return translation;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Check if Chrome AI APIs are available (for future use)\r\n  const checkChromeAI = useCallback(() => {\r\n    return {\r\n      available: typeof window !== 'undefined' && \r\n                (window.ai || window.chrome?.ai || navigator.ai),\r\n      apis: {\r\n        prompt: window.ai?.prompt,\r\n        writer: window.ai?.writer,\r\n        rewriter: window.ai?.rewriter,\r\n        summarizer: window.ai?.summarizer,\r\n        translator: window.ai?.translator\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    lastResponse,\r\n    expandIdeas,\r\n    refineIdea,\r\n    summarizeIdeas,\r\n    translateIdea,\r\n    checkChromeAI\r\n  };\r\n};\r\n\r\nexport default useAI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}