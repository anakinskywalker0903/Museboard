{"ast":null,"code":"var _jsxFileName = \"C:\\\\Extensions\\\\Museboard\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport IdeaNode from './IdeaNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  ideas,\n  selectedIdeas,\n  onIdeasChange,\n  onSelectedIdeasChange\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [dragStart, setDragStart] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw connections\n    ideas.forEach(idea => {\n      idea.connections.forEach(connectedId => {\n        const connectedIdea = ideas.find(i => i.id === connectedId);\n        if (connectedIdea) {\n          drawConnection(ctx, idea, connectedIdea);\n        }\n      });\n    });\n  }, [ideas]);\n  const drawConnection = (ctx, idea1, idea2) => {\n    ctx.beginPath();\n    ctx.moveTo(idea1.x + 50, idea1.y + 25); // Center of first node\n    ctx.lineTo(idea2.x + 50, idea2.y + 25); // Center of second node\n    ctx.strokeStyle = '#e5e7eb';\n    ctx.lineWidth = 2;\n    ctx.stroke();\n  };\n  const handleCanvasClick = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if click is on an existing idea\n    const clickedIdea = ideas.find(idea => x >= idea.x && x <= idea.x + 100 && y >= idea.y && y <= idea.y + 50);\n    if (clickedIdea) {\n      // Toggle selection\n      const newSelected = selectedIdeas.includes(clickedIdea.id) ? selectedIdeas.filter(id => id !== clickedIdea.id) : [...selectedIdeas, clickedIdea.id];\n      onSelectedIdeasChange(newSelected);\n    } else {\n      // Add new idea\n      const newIdea = {\n        id: Date.now(),\n        text: 'New idea',\n        x: x - 50,\n        y: y - 25,\n        connections: []\n      };\n      onIdeasChange([...ideas, newIdea]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"absolute inset-0 w-full h-full pointer-events-none\",\n      style: {\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative bg-white rounded-lg shadow-sm border min-h-96\",\n      style: {\n        height: '500px'\n      },\n      onClick: handleCanvasClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 opacity-5\",\n        style: {\n          backgroundImage: `\n              linear-gradient(to right, #000 1px, transparent 1px),\n              linear-gradient(to bottom, #000 1px, transparent 1px)\n            `,\n          backgroundSize: '20px 20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), demoIdeas.map(idea => /*#__PURE__*/_jsxDEV(IdeaNode, {\n        idea: idea,\n        isSelected: selectedIdeas.includes(idea.id),\n        onUpdate: updatedIdea => {\n          setDemoIdeas(demoIdeas.map(i => i.id === idea.id ? updatedIdea : i));\n        },\n        onDelete: () => {\n          setDemoIdeas(demoIdeas.filter(i => i.id !== idea.id));\n          onSelectedIdeasChange(selectedIdeas.filter(id => id !== idea.id));\n        }\n      }, idea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)), demoIdeas.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center text-gray-400\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl mb-2\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click anywhere to add your first idea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"vW8XL0zw8WVwwWnFCU076t+okno=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useRef","useEffect","useState","IdeaNode","jsxDEV","_jsxDEV","Board","ideas","selectedIdeas","onIdeasChange","onSelectedIdeasChange","_s","canvasRef","isDrawing","setIsDrawing","dragStart","setDragStart","canvas","current","ctx","getContext","width","offsetWidth","height","offsetHeight","clearRect","forEach","idea","connections","connectedId","connectedIdea","find","i","id","drawConnection","idea1","idea2","beginPath","moveTo","x","y","lineTo","strokeStyle","lineWidth","stroke","handleCanvasClick","e","rect","getBoundingClientRect","clientX","left","clientY","top","clickedIdea","newSelected","includes","filter","newIdea","Date","now","text","className","children","ref","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundImage","backgroundSize","demoIdeas","map","isSelected","onUpdate","updatedIdea","setDemoIdeas","onDelete","length","_c","$RefreshReg$"],"sources":["C:/Extensions/Museboard/src/components/Board.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport IdeaNode from './IdeaNode';\r\n\r\nconst Board = ({ ideas, selectedIdeas, onIdeasChange, onSelectedIdeasChange }) => {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [dragStart, setDragStart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Set canvas size\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Draw connections\r\n    ideas.forEach(idea => {\r\n      idea.connections.forEach(connectedId => {\r\n        const connectedIdea = ideas.find(i => i.id === connectedId);\r\n        if (connectedIdea) {\r\n          drawConnection(ctx, idea, connectedIdea);\r\n        }\r\n      });\r\n    });\r\n  }, [ideas]);\r\n\r\n  const drawConnection = (ctx, idea1, idea2) => {\r\n    ctx.beginPath();\r\n    ctx.moveTo(idea1.x + 50, idea1.y + 25); // Center of first node\r\n    ctx.lineTo(idea2.x + 50, idea2.y + 25); // Center of second node\r\n    ctx.strokeStyle = '#e5e7eb';\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n  };\r\n\r\n  const handleCanvasClick = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    // Check if click is on an existing idea\r\n    const clickedIdea = ideas.find(idea => \r\n      x >= idea.x && x <= idea.x + 100 && \r\n      y >= idea.y && y <= idea.y + 50\r\n    );\r\n\r\n    if (clickedIdea) {\r\n      // Toggle selection\r\n      const newSelected = selectedIdeas.includes(clickedIdea.id)\r\n        ? selectedIdeas.filter(id => id !== clickedIdea.id)\r\n        : [...selectedIdeas, clickedIdea.id];\r\n      onSelectedIdeasChange(newSelected);\r\n    } else {\r\n      // Add new idea\r\n      const newIdea = {\r\n        id: Date.now(),\r\n        text: 'New idea',\r\n        x: x - 50,\r\n        y: y - 25,\r\n        connections: []\r\n      };\r\n      onIdeasChange([...ideas, newIdea]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* Canvas for connections */}\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"absolute inset-0 w-full h-full pointer-events-none\"\r\n        style={{ zIndex: 1 }}\r\n      />\r\n      \r\n      {/* Ideas container */}\r\n      <div \r\n        className=\"relative bg-white rounded-lg shadow-sm border min-h-96\"\r\n        style={{ height: '500px' }}\r\n        onClick={handleCanvasClick}\r\n      >\r\n        {/* Grid background */}\r\n        <div \r\n          className=\"absolute inset-0 opacity-5\"\r\n          style={{\r\n            backgroundImage: `\r\n              linear-gradient(to right, #000 1px, transparent 1px),\r\n              linear-gradient(to bottom, #000 1px, transparent 1px)\r\n            `,\r\n            backgroundSize: '20px 20px'\r\n          }}\r\n        />\r\n\r\n        {/* Idea nodes */}\r\n        {demoIdeas.map(idea => (\r\n          <IdeaNode\r\n            key={idea.id}\r\n            idea={idea}\r\n            isSelected={selectedIdeas.includes(idea.id)}\r\n            onUpdate={(updatedIdea) => {\r\n              setDemoIdeas(demoIdeas.map(i => \r\n                i.id === idea.id ? updatedIdea : i\r\n              ));\r\n            }}\r\n            onDelete={() => {\r\n              setDemoIdeas(demoIdeas.filter(i => i.id !== idea.id));\r\n              onSelectedIdeasChange(selectedIdeas.filter(id => id !== idea.id));\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {/* Empty state */}\r\n        {demoIdeas.length === 0 && (\r\n          <div className=\"absolute inset-0 flex items-center justify-center text-gray-400\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-4xl mb-2\">💡</div>\r\n              <p>Click anywhere to add your first idea</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC,aAAa;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAGL,SAAS,CAACM,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAH,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACK,WAAW;IACjCL,MAAM,CAACM,MAAM,GAAGN,MAAM,CAACO,YAAY;;IAEnC;IACAL,GAAG,CAACM,SAAS,CAAC,CAAC,EAAE,CAAC,EAAER,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACM,MAAM,CAAC;;IAEhD;IACAhB,KAAK,CAACmB,OAAO,CAACC,IAAI,IAAI;MACpBA,IAAI,CAACC,WAAW,CAACF,OAAO,CAACG,WAAW,IAAI;QACtC,MAAMC,aAAa,GAAGvB,KAAK,CAACwB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,WAAW,CAAC;QAC3D,IAAIC,aAAa,EAAE;UACjBI,cAAc,CAACf,GAAG,EAAEQ,IAAI,EAAEG,aAAa,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACvB,KAAK,CAAC,CAAC;EAEX,MAAM2B,cAAc,GAAGA,CAACf,GAAG,EAAEgB,KAAK,EAAEC,KAAK,KAAK;IAC5CjB,GAAG,CAACkB,SAAS,CAAC,CAAC;IACflB,GAAG,CAACmB,MAAM,CAACH,KAAK,CAACI,CAAC,GAAG,EAAE,EAAEJ,KAAK,CAACK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxCrB,GAAG,CAACsB,MAAM,CAACL,KAAK,CAACG,CAAC,GAAG,EAAE,EAAEH,KAAK,CAACI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxCrB,GAAG,CAACuB,WAAW,GAAG,SAAS;IAC3BvB,GAAG,CAACwB,SAAS,GAAG,CAAC;IACjBxB,GAAG,CAACyB,MAAM,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGnC,SAAS,CAACM,OAAO,CAAC8B,qBAAqB,CAAC,CAAC;IACtD,MAAMT,CAAC,GAAGO,CAAC,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;IAC/B,MAAMV,CAAC,GAAGM,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,GAAG;;IAE9B;IACA,MAAMC,WAAW,GAAG9C,KAAK,CAACwB,IAAI,CAACJ,IAAI,IACjCY,CAAC,IAAIZ,IAAI,CAACY,CAAC,IAAIA,CAAC,IAAIZ,IAAI,CAACY,CAAC,GAAG,GAAG,IAChCC,CAAC,IAAIb,IAAI,CAACa,CAAC,IAAIA,CAAC,IAAIb,IAAI,CAACa,CAAC,GAAG,EAC/B,CAAC;IAED,IAAIa,WAAW,EAAE;MACf;MACA,MAAMC,WAAW,GAAG9C,aAAa,CAAC+C,QAAQ,CAACF,WAAW,CAACpB,EAAE,CAAC,GACtDzB,aAAa,CAACgD,MAAM,CAACvB,EAAE,IAAIA,EAAE,KAAKoB,WAAW,CAACpB,EAAE,CAAC,GACjD,CAAC,GAAGzB,aAAa,EAAE6C,WAAW,CAACpB,EAAE,CAAC;MACtCvB,qBAAqB,CAAC4C,WAAW,CAAC;IACpC,CAAC,MAAM;MACL;MACA,MAAMG,OAAO,GAAG;QACdxB,EAAE,EAAEyB,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE,UAAU;QAChBrB,CAAC,EAAEA,CAAC,GAAG,EAAE;QACTC,CAAC,EAAEA,CAAC,GAAG,EAAE;QACTZ,WAAW,EAAE;MACf,CAAC;MACDnB,aAAa,CAAC,CAAC,GAAGF,KAAK,EAAEkD,OAAO,CAAC,CAAC;IACpC;EACF,CAAC;EAED,oBACEpD,OAAA;IAAKwD,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAEvBzD,OAAA;MACE0D,GAAG,EAAEnD,SAAU;MACfiD,SAAS,EAAC,oDAAoD;MAC9DG,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAGFhE,OAAA;MACEwD,SAAS,EAAC,wDAAwD;MAClEG,KAAK,EAAE;QAAEzC,MAAM,EAAE;MAAQ,CAAE;MAC3B+C,OAAO,EAAEzB,iBAAkB;MAAAiB,QAAA,gBAG3BzD,OAAA;QACEwD,SAAS,EAAC,4BAA4B;QACtCG,KAAK,EAAE;UACLO,eAAe,EAAE;AAC7B;AACA;AACA,aAAa;UACDC,cAAc,EAAE;QAClB;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGDI,SAAS,CAACC,GAAG,CAAC/C,IAAI,iBACjBtB,OAAA,CAACF,QAAQ;QAEPwB,IAAI,EAAEA,IAAK;QACXgD,UAAU,EAAEnE,aAAa,CAAC+C,QAAQ,CAAC5B,IAAI,CAACM,EAAE,CAAE;QAC5C2C,QAAQ,EAAGC,WAAW,IAAK;UACzBC,YAAY,CAACL,SAAS,CAACC,GAAG,CAAC1C,CAAC,IAC1BA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,GAAG4C,WAAW,GAAG7C,CACnC,CAAC,CAAC;QACJ,CAAE;QACF+C,QAAQ,EAAEA,CAAA,KAAM;UACdD,YAAY,CAACL,SAAS,CAACjB,MAAM,CAACxB,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC,CAAC;UACrDvB,qBAAqB,CAACF,aAAa,CAACgD,MAAM,CAACvB,EAAE,IAAIA,EAAE,KAAKN,IAAI,CAACM,EAAE,CAAC,CAAC;QACnE;MAAE,GAXGN,IAAI,CAACM,EAAE;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACF,CAAC,EAGDI,SAAS,CAACO,MAAM,KAAK,CAAC,iBACrB3E,OAAA;QAAKwD,SAAS,EAAC,iEAAiE;QAAAC,QAAA,eAC9EzD,OAAA;UAAKwD,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BzD,OAAA;YAAKwD,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvChE,OAAA;YAAAyD,QAAA,EAAG;UAAqC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1D,EAAA,CA7HIL,KAAK;AAAA2E,EAAA,GAAL3E,KAAK;AA+HX,eAAeA,KAAK;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}